
######################################################################
# Macro pause 20240613
######################################################################

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0 # No quitar, imprescindible para el comando Pause
gcode:
  {% if printer.pause_resume.is_paused %}
  { action_respond_info("Impresora ya estaba en Pausa") }
  {% else %}
  BEEP
  BEEP
  M400
  M117 Entrando en modo Pausa
  M118 Entrando en modo Pausa
  _led_atencion
  SET_LED LED=tira_led WHITE=0.8
  BEEP

  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}

  ##### set park positon for X and Y #####
  {% set x_park = 270.0|float %} # Punto donde para la extrusora en X al producirse una pausa
  {% set y_park = 5.0|float %}   # Punto donde para la extrusora en Y al producirse una pausa

  ##### Variables definition #####
  {% set max_z = printer.toolhead.axis_maximum.z|default(340)|float %} # Altura maxima, no es necesario si está definida en otra parte, yo la pongo por seguridad
  {% set act_z = printer.toolhead.position.z|float %} # Variable para guardar la posición actual de Z
  {% set z_safe = 0.0|float %}  # Variable donde vamos a almacenar, al final del calculo, el desplazamiento, la bajada que tiene que hacer Z
  {% set diferencia_park = (0.0)|float %} # Inicialización de la variable, donde se calcula el espacio disponible hasta el punto mas bajo donde puede llegar la cama, (z_max)
  {% set descenso_park = (0.0)|float %} # Variable para el calculo de la bajada en función del espacio que queda, que será dividida por el factor que elijamos
  {% set bajada_park = (0.0)|float %} # Variable para el calculo del valor absoluto de la posición de Z a la que queremos ir
 ##### end of definitions #####

  ##### Calculate dinamic Z position #####
  {% set diferencia_park = (max_z - printer.toolhead.position.z) %} # Aquí calculamos el espacio disponible, desde donde estamos, hasta el punto mas bajo
  {% set descenso_park = (diferencia_park / 5) %} # calculo de la bajada en función de la altura, calculamos la quinta parte del hueco que haya, (con el 5, se puede cambiar para otras alturas)
  {% set bajada_park = (printer.toolhead.position.z + descenso_park) %} # calculo de la posición a la que queremos llevar la boquilla, en función de los calculos anteriores
  {% set z_safe = (bajada_park) %}  # Asignacion a la variable z_safe del valor absoluto de altura donde queremos ir en el eje Z
   ##### end of calculations #####
 
  PAUSE_BASE
  BEEP 
  BEEP
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("La extrusora no esta suficientemente caliente")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900 # Aplicacion del dato obtenido en los calculos anteriores de posicionamiento dinamico de Z
    G90
    G1 X{x_park} Y{y_park} F1250 #6000
  {% else %}
    {action_respond_info("La impresora no ha hecho 'HOME'")}
  {% endif %} 

  {% endif %}

